<%
  # Button component with shadcn/ui styling
  variant = local_assigns[:variant] || 'default'
  size = local_assigns[:size] || 'default'
  css_class = local_assigns[:class] || ''

  variant_classes = {
    'default' => 'bg-primary text-primary-foreground hover:bg-primary/90',
    'destructive' => 'bg-destructive text-destructive-foreground hover:bg-destructive/90',
    'outline' => 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',
    'secondary' => 'bg-secondary text-secondary-foreground hover:bg-secondary/80',
    'ghost' => 'hover:bg-accent hover:text-accent-foreground',
    'link' => 'text-primary underline-offset-4 hover:underline'
  }

  size_classes = {
    'default' => 'h-10 px-4 py-2',
    'sm' => 'h-9 rounded-md px-3',
    'lg' => 'h-11 rounded-md px-8',
    'icon' => 'h-10 w-10'
  }

  base_classes = 'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50'

  final_classes = "#{base_classes} #{variant_classes[variant]} #{size_classes[size]} #{css_class}".strip

  # Get other attributes
  other_attrs = local_assigns.except(:variant, :size, :class)
  attr_string = other_attrs.map { |k, v| "#{k}=\"#{v}\"" }.join(' ')
%>

<button class="<%= final_classes %>" <%= attr_string.html_safe %>>
  <%= yield %>
</button>
